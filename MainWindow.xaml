<Window x:Class="Elexus.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:hx="http://helix-toolkit.org/wpf/SharpDX"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:Elexus"
        Title="Elexus"
        Width="800"
        Height="500"
        mc:Ignorable="d"
        Loaded="Window_Loaded">
    <Window.DataContext>
        <local:MainViewModel />
    </Window.DataContext>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <Menu Grid.Row="0" VerticalAlignment="Top">
            <Menu.Background>
                <SolidColorBrush Opacity="0.5" Color="WhiteSmoke" />
            </Menu.Background>
            <MenuItem Header="View">
                <MenuItem Command="hx:ViewportCommands.ZoomExtents" Header="Zoom extents" />
            </MenuItem>
        </Menu>

        <hx:Viewport3DX Grid.Row="1"
                        x:Name="view1"
                        Title="{Binding Title}"
                        Camera="{Binding Camera}"
                        EffectsManager="{Binding EffectsManager}"
                        ShowCoordinateSystem="True"
                        SubTitle="{Binding SubTitle}"
                        Background="Black"
                        UseDefaultGestures="True">
            <hx:Viewport3DX.InputBindings>
                <KeyBinding Command="{Binding AddPartCommand}" Key="N" Modifiers="Shift" />
                <MouseBinding Command="hx:ViewportCommands.Rotate" Gesture="RightClick" />
                <MouseBinding Command="hx:ViewportCommands.Zoom" Gesture="MiddleClick" />
                <MouseBinding Command="hx:ViewportCommands.Pan" Gesture="Shift+MiddleClick" />
            </hx:Viewport3DX.InputBindings>

            <hx:AmbientLight3D Color="{Binding AmbientLightColor}" />
            <hx:DirectionalLight3D Direction="{Binding Camera.LookDirection}" Color="{Binding DirectionalLightColor}" />

            <hx:LineGeometryModel3D x:Name="grid"
                                    Geometry="{Binding Grid}"
                                    Transform="{Binding GridTransform}"
                                    Color="{Binding GridColor}"
                                    Thickness="0.3"/>
            <hx:LineGeometryModel3D x:Name="axisX" Geometry="{Binding AxisX}" Color="Red" Thickness="0.5"/>
            <hx:LineGeometryModel3D x:Name="axisY" Geometry="{Binding AxisY}" Color="Green" Thickness="0.5"/>

            <hx:MeshGeometryModel3D x:Name="mesh1"
                                    Geometry="{Binding Model}"
                                    Material="{x:Static hx:PhongMaterials.Chrome}" 
                                    Transform="{Binding ModelTransform, Mode=TwoWay}"/>
            <hx:TransformManipulator3D
                                    x:Name="manipulator"
                                    CenterOffset="{Binding CenterOffset}"
                                    SizeScale="1"
                                    Target="{Binding Target}" IsHitTestVisible="True" AlwaysHittable="False" />
            <!--<hx:UITranslateManipulator3D
                x:Name="translateX"
                Direction="1,0,0"
                Material="{x:Static hx:PhongMaterials.Red}"
                TargetTransform="{Binding Transform, ElementName=selectedModel.name}"
                Transform="{Binding Transform, ElementName=selectedModel.name}"
                Offset="1,0,0" />

            <hx:UITranslateManipulator3D
                x:Name="translateY"
                Direction="0,1,0"
                Material="{x:Static hx:PhongMaterials.Green}"
                TargetTransform="{Binding Transform, ElementName=model2}"
                Transform="{Binding Transform, ElementName=model2}"
                Offset="0,1,0" />

            <hx:UITranslateManipulator3D
                x:Name="translateZ"
                Direction="0,0,1"
                Material="{x:Static hx:PhongMaterials.Blue}"
                TargetTransform="{Binding Transform, ElementName=selectedModel.name}"
                Transform="{Binding Transform, ElementName=selectedModel.name}"
                Offset="0,0,1" />

            <hx:UIRotateManipulator3D
                x:Name="rotateX"
                Axis="1,0,0"
                InnerDiameter="2"
                Material="{x:Static hx:PhongMaterials.Red}"
                TargetTransform="{Binding Transform, ElementName=selectedModel.name}"
                Transform="{Binding Transform, ElementName=selectedModel.name}" />

            <hx:UIRotateManipulator3D
                x:Name="rotateY"
                Axis="0,1,0"
                InnerDiameter="2"
                Material="{x:Static hx:PhongMaterials.Green}"
                TargetTransform="{Binding Transform, ElementName=selectedModel.name}"
                Transform="{Binding Transform, ElementName=selectedModel.name}" />
            <hx:UIRotateManipulator3D
                x:Name="rotateZ"
                Axis="0,0,1"
                InnerDiameter="2"
                Material="{x:Static hx:PhongMaterials.Blue}"
                TargetTransform="{Binding Transform, ElementName=selectedModel.name}"
                Transform="{Binding Transform, ElementName=selectedModel.name}" />-->
            <hx:PostEffectMeshBorderHighlight
                x:Name="borderEffect"
                EffectName="highlight"
                Color="Red"
                NumberOfBlurPass="2"
                DrawMode="{Binding DrawMode}" />
        </hx:Viewport3DX>

        <StatusBar Grid.Row="1" VerticalAlignment="Bottom">
            <StatusBar.Background>
                <SolidColorBrush Opacity="0.5" Color="WhiteSmoke" />
            </StatusBar.Background>
            <StatusBarItem>
                <TextBlock HorizontalAlignment="Left"
                           VerticalAlignment="Top"
                           Text="{Binding FrameRate, ElementName=view1, StringFormat=D3D11 - {0:0.00} FPS}" />
            </StatusBarItem>
            <Separator />
            <StatusBarItem>
                <TextBlock Text="{Binding Camera.Position, StringFormat=Position: {0:0.0}}" />
            </StatusBarItem>
            <Separator />
            <StatusBarItem>
                <TextBlock Text="{Binding Camera.LookDirection, StringFormat=LookDirection: {0:0.0}}" />
            </StatusBarItem>
            <Separator />
            <StatusBarItem>
                <TextBlock Text="{Binding Camera.UpDirection, StringFormat=UpDirection: {0:0.0}}" />
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
